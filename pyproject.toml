[tool.poetry]
name = "ampel-hu-astro"
version = "0.10.0a4"
license = "BSD-3-Clause"
readme = "README.md"
description = "Astronomy units for the Ampel system from HU-Berlin"
homepage = "https://ampelproject.github.io"
repository = "https://github.com/AmpelProject/Ampel-HU-astro"
authors = [
    "Valery Brinnel",
    "Jakob van Santen <jakob.van.santen@desy.de>",
    "Sjoert van Velzen",
    "Jakob Nordin",
    "Matteo Giomi",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed",
]
packages = [
    {include = "ampel"}
]
include = [
    'conf/*/*.json',
    'conf/*/*/*.json',
    'conf/*/*.yaml',
    'conf/*/*/*.yaml',
    'conf/*/*.yml',
    'conf/*/*/*.yml',
]

[tool.poetry.dependencies]
python = "^3.10"
ampel-plot = {version = "^0.9.0a2"}
ampel-ztf = {version = ">=0.10.2,<0.11", extras = ["kafka"], optional = true}
ampel-photometry = {version = ">=0.10.0,<0.11"}
ampel-alerts = {version = ">=0.10.1,<0.11"}
ampel-interface = {version = ">=0.10.3a1,<0.11"}
# mainline sncosmo does not support numpy 2 or python 3.13
sncosmo = {version = "^2.11.2.post0", optional = true, source = "desy-gitlab"}
iminuit = {version = "^2.8.0", optional = true}
sfdmap2 = {version = "^0.2.0", optional = true}
numpy = ">=1"
scipy = ">=1.4"
beautifulsoup4 = "^4.10.0"
backoff = "^2"
requests = "^2.26.0"
astropy = ">=5.0"
pandas = ">=2.0"
seaborn = "^0.13.0"
adjustText = "^1.0.0"
extcats = {version = "^2.4.2", optional = true}
slack-sdk = {version = "^3", optional = true}
xgboost = {version = "^1.6.2", optional = true}
astro-parsnip = {version = "^1.4.1", optional = true}
# torch 2.5 required for py313 support
torch = {version = ">=2.5", python = ">=3.13", optional = true}
timeout-decorator = {version = "^0.5", optional = true}
jupyter = {version = "^1.0.0", optional = true}
more-itertools = "^10.0.0"
uncertainties = "^3.1.7"
scikit-learn = "^1.1.3"
healpy = {version = "^1.16.2", optional = true}
light-curve = {version = "^0.9.0", optional = true}
ampel-lsst = {version = ">=0.10.0a1,<0.11", optional = true}
ztfquery = {version = "^1.26.1", optional = true}
ligo-gracedb = {version = "^2.12.0", optional = true}
snpy = {version = "^2.7.0", optional = true}

[tool.poetry.group.dev.dependencies]
mypy = "^1.6.1"
pytest = "^8.0.2"
pytest-cov = "^6.0.0"
pytest-mock = "^3.12.0"
types-requests = "^2.25.9"
types-pytz = "^2022.1.2"
types-pillow = "^10.2.0.20240213"
# prevent poetry 1.3 from removing setuptools
setuptools = "*"
types-pyyaml = "^6.0.12.20240311"
mongomock = "^4.1.2"

[tool.poetry.extras]
elasticc = ["xgboost", "astro-parsnip", "timeout-decorator", "ampel-lsst", "light-curve"]
extcats = ["extcats"]
ligo = ["healpy", "sncosmo", "iminuit", "sfdmap2", "ampel-ztf", "ligo-gracedb"]
slack = ["slack_sdk"]
sncosmo = ["sncosmo", "iminuit", "sfdmap2"]
snpy = ["snpy"]
notebook = ["jupyter"]
ztf = ["ampel-ztf", "ztfquery"]
lsst = ["ampel-lsst"]

[[tool.poetry.source]]
name = "desy-gitlab"
url = "https://gitlab.desy.de/api/v4/projects/jakob.van.santen%2Fampel-pypi-demo/packages/pypi/simple"
priority = "supplemental"

[tool.conda-lock]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64"]

[tool.conda-lock.dependencies]
python-confluent-kafka = "1.7"
matplotlib-base = "3.*"
pip = "*"

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=40.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
namespace_packages = true
show_error_codes = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
  "numpy.*",
  "scipy.*",
  "pymongo.*",
  "bson.*",
  "matplotlib.*",
  "pandas.*",
  "seaborn.*",
  "astropy.*",
  "ampel.model.PlotProperties",
  "ampel.plot.utils",
  "lcdata.*",
  "timeout_decorator.*",
  "parsnip.*",
  "sncosmo.*",
  "requests_toolbelt.*",
  "adjustText.*",
  "extcats.*",
  "voeventparse.*",
  "healpy.*",
  "light_curve.*",
  "xgboost.*",
  "ligo.*",
  "ztfquery.*",
  "joblib.*",
  "confluent_kafka.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov=ampel --showlocals -ra"
filterwarnings = [
    "error",
    "always:numpy.ndarray size changed:RuntimeWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace\\('ligo'\\):DeprecationWarning",
    "ignore:pkg_resources is deprecated:DeprecationWarning",
    "ignore:(?s).*Pyarrow will become a required dependency of pandas:DeprecationWarning",
    "ignore:Python 3.14 will, by default, filter extracted tar archives and reject files or modify their metadata.:DeprecationWarning:sncosmo",
]

[tool.black]
line-length = 88

[tool.ruff]
target-version = "py310"
exclude = [
    "ampel/contrib/hu/xgb_trees.py",
    "notebooks",
    "scripts",
    "setup.py",
]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "UP", # pyupgrade
    "B", # bugbear
    "DTZ", # datetimez
    "T20", # print statements
    # "PT", # pytest-style
    "RET", # return
    "SLF",
    "SIM",
    # "ARG", # sometimes your arguments have to conform to an interface
    # "ERA", # seems to prohibit all comments, that's bad
    "PL",
    "PERF",
    "RUF",
]
ignore = [
    "E741", # ambiguous variable name
    "UP009", # UTF-8 encoding declaration is unnecessary
    "PLR09", # too many (arguments|branches)
    "PLR2004", # Magic value used in comparison
    "RUF012", # fine for AmpelUnit, actually (ruff has a special case for pydantic)
    "RUF023", # unsorted __slots__ are fine
]
